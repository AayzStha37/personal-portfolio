# File: .github/workflows/build-and-push.yml (Final with Auto-Deploy)

name: Build, Push, and Deploy to GKE

on:
  pull_request:
    types: [ closed ]
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_name: ${{ steps.sanitize.outputs.IMAGE_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sanitize repository name for Docker tag
        id: sanitize # Give this step an ID to reference its output
        run: echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push portfolio-api image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:latest

      - name: Build and push portfolio-ui image
        uses: docker/build-push-action@v5
        with:
          context: ./ui
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/ui:latest

  deploy:
    # This job will only run if the 'build-and-push' job succeeds
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for keyless authentication

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (keyless)
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Get GKE cluster credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: portfolio-cluster
          location: us-central1-c # Use the same zone you created the cluster in

      - name: Deploy application to GKE
        run: |
          echo "Deploying new version to GKE cluster..."
          # The -k flag uses our Kustomize configuration to deploy everything
          kubectl apply -k k8s/